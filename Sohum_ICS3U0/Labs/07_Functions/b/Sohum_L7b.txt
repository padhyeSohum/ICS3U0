#-----------------------------------------------------------------------------
# Name:        Movie Database
# Purpose:     To use functions to create a CLI tool that a user can use to store and get movies
#
# Author:      Sohum Padhye
# Created:     17-Apr-2025
# Updated:     17-Apr-2025
#-----------------------------------------------------------------------------

# initialize and create a default starting value for the movie database
def create_movie_database():
    return {
        "The Lucas Movie": ("Action", 9.2),
        "The Sohum Movie": ("Action", 10.0),
        "The Aarnav Movie": ("Comedy", 9.3),
        "The Danny Movie": ("Adventure", 9.5),
        "The Clinton Movie": ("Comedy", 9.4)
    }

# add a movie to the database
def add_movie(database, title, genre, rating):
    # check if there is already a movie with this name in the database
    if database[title]:
        print("There is a movie with this name already in the database!")
    
    # if not, then add it
    else:
        database[title] = (genre, rating)
        print("Movie added!")
    return database

# get recommendations of movies in the database for the user
def get_recommendations(database, genre, min_rating):
    recommended_movies = []

    # loop through the keys in the database
    for i in database.keys():

        # if the genere is correct and the movie's rating is 
        # greater than or equal to the target rating, then
        # add the movie to the list of recommended movies
        if database[i][0].lower() == genre:
            if database[i][1] >= min_rating:
                recommended_movies.append(i)
    return recommended_movies

# run the menu of the program
def run_menu(database):
    print("Welcome to the movie database. Here are your actions:")
    print("- Add movie: Type 1\n- Get recommendations: Type 2\n- Exit: Type 3, e, or q")

    # create a list of valid actions
    action_list = ["1", "2", "3", "e", "E", "q", "Q"]

    # ask for input from the user, then keep asking until they enter a valid action (if they haven't already)
    action = input("Enter an action: ")
    while not (action in action_list):
        action = input("Please enter a valid action (1, 2, 3, e, q): ")
    

    while action in ["1", "2"]:
        if action == "1": # add a movie
            # take inputs for parameters, then make the variable database equal to the new database
            title = input("Enter the movie's title: ")
            genre = input("Enter the movie's genre: ")
            rating = float(input("Enter the movie's rating: "))
            database = add_movie(database, title, genre, rating)
        elif action == "2": # get recommendations
            # take inputs from parameters, then make the variable recommendatinos equal to the recommendations
            genre = input("Enter the genre of movies you would like to see recommendations for: ").lower()
            min_rating = float(input("Enter the minimum rating you would like to search: "))
            recommendations = get_recommendations(database, genre, min_rating)
            print("Your movie recommendations are: " + ", ".join(recommendations))
        
        # ask for action input from user again
        action = input("Enter an action: ")
        while not (action in action_list):
            action = input("Please enter a valid action (1, 2, or 3): ")
    
    # user wants to leave, print goodbye
    print("Goodbye!")
    return database

def main():
    movie_db = create_movie_database()
    database = run_menu(movie_db)

    # print updated database when user is done
    print("Your updated database is: " + str(database))

# start program
main()